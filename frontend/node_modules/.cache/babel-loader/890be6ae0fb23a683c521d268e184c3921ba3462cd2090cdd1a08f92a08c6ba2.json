{"ast":null,"code":"var _jsxFileName = \"/Users/sameeraishrat/Desktop/Authentication/frontend/src/pages/Authentication.js\";\nimport { json, redirect } from 'react-router';\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport const action = async ({\n  request,\n  params\n}) => {\n  //grab the mode from the searchParams\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login'; // if undefined then mode = login\n\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({\n      message: 'Unsupported mode'\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch('http://localhost:8080/' + mode, {\n    method: 'POST',\n    body: JSON.stringify(authData),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  });\n\n  //this is backend response\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Couldnot authenticate user'\n    }, {\n      status: 500\n    });\n  }\n\n  // get the token from the backend\n\n  const resData = await response.json();\n  const token = resData.token;\n\n  ///store the token on localstorage\n\n  localStorage.setItem('token', token);\n\n  //for automatic logout\n\n  const expiration = new Date();\n  return redirect('/');\n};\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["json","redirect","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","searchParams","URL","url","mode","get","message","status","data","formData","authData","email","password","response","fetch","method","body","JSON","stringify","headers","ok","resData","token","localStorage","setItem","expiration","Date","$RefreshReg$"],"sources":["/Users/sameeraishrat/Desktop/Authentication/frontend/src/pages/Authentication.js"],"sourcesContent":["import { json, redirect } from 'react-router';\nimport AuthForm from '../components/AuthForm';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport const action = async({request,params}) => {\n\n//grab the mode from the searchParams\nconst searchParams = new URL(request.url).searchParams;\nconst mode = searchParams.get('mode') || 'login'; // if undefined then mode = login\n\nif(mode !== 'login' && mode !== 'signup'){\n  throw json({message:'Unsupported mode'},{status:422})\n}\n\nconst data = await request.formData();\nconst authData = {\n  email : data.get('email'),\n  password : data.get('password')\n}\n\nconst response = await fetch('http://localhost:8080/' + mode,{\n  method:'POST',\n  body:JSON.stringify(authData),\n  headers : {\n    'Content-type': 'application/json'\n  }\n})\n\n//this is backend response\nif(response.status === 422 || response.status === 401) {\n  return response\n}\n\nif(!response.ok) {\n  throw json({message:'Couldnot authenticate user'},{status:500})\n}\n\n// get the token from the backend\n\nconst resData = await response.json();\nconst token = resData.token;\n\n///store the token on localstorage\n\nlocalStorage.setItem('token' , token);\n\n//for automatic logout\n\nconst expiration = new Date\n\nreturn redirect('/')\n\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,cAAc;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,MAAMM,MAAM,GAAG,MAAAA,CAAM;EAACC,OAAO;EAACC;AAAM,CAAC,KAAK;EAEjD;EACA,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACH,OAAO,CAACI,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC;;EAElD,IAAGD,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAC;IACvC,MAAMjB,IAAI,CAAC;MAACmB,OAAO,EAAC;IAAkB,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACvD;EAEA,MAAMC,IAAI,GAAG,MAAMT,OAAO,CAACU,QAAQ,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAGH,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;IACzBO,QAAQ,EAAGJ,IAAI,CAACH,GAAG,CAAC,UAAU;EAChC,CAAC;EAED,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGV,IAAI,EAAC;IAC3DW,MAAM,EAAC,MAAM;IACbC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAAC;IAC7BS,OAAO,EAAG;MACR,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;;EAEF;EACA,IAAGN,QAAQ,CAACN,MAAM,KAAK,GAAG,IAAIM,QAAQ,CAACN,MAAM,KAAK,GAAG,EAAE;IACrD,OAAOM,QAAQ;EACjB;EAEA,IAAG,CAACA,QAAQ,CAACO,EAAE,EAAE;IACf,MAAMjC,IAAI,CAAC;MAACmB,OAAO,EAAC;IAA4B,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACjE;;EAEA;;EAEA,MAAMc,OAAO,GAAG,MAAMR,QAAQ,CAAC1B,IAAI,CAAC,CAAC;EACrC,MAAMmC,KAAK,GAAGD,OAAO,CAACC,KAAK;;EAE3B;;EAEAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAGF,KAAK,CAAC;;EAErC;;EAEA,MAAMG,UAAU,GAAG,IAAIC,IAAI,CAAD,CAAC;EAE3B,OAAOtC,QAAQ,CAAC,GAAG,CAAC;AAEpB,CAAC;AAAA,IAAAS,EAAA;AAAA8B,YAAA,CAAA9B,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}